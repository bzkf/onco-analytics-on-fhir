akhq:
  # -- whether the included [Kafka UI AKHQ](https://akhq.io/) should be installed
  enabled: true
  image:
    tag: 0.24.0@sha256:6ccf8323ae6e93a893107f857cd9f7210add3569743b2c8528c6567967cc636f
  configuration:
    akhq:
      connections:
        bzkf-dizbox-cluster:
          properties:
            # -- the Kafka bootstrap server. Needs to be changed if the
            # chart release name is changed from the default `bzkf-dizbox`
            bootstrap.servers: "bzkf-dizbox-cluster-kafka-bootstrap:9093"
            security.protocol: SSL
            ssl.truststore.location: /opt/kafka-certs/ca.p12
            ssl.truststore.password: ${SSL_TRUST_STORE_PASSWORD}
            ssl.keystore.location: /opt/kafka-certs/user.p12
            ssl.keystore.password: ${SSL_KEY_STORE_PASSWORD}
  # @ignore
  extraEnv:
    - name: SSL_KEY_STORE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: onco-analytics-on-fhir-akhq
          key: user.password
    - name: SSL_TRUST_STORE_PASSWORD
      valueFrom:
        secretKeyRef:
          name: bzkf-dizbox-cluster-cluster-ca-cert
          key: ca.password
    - name: JAVA_OPTS
      value: "-Duser.timezone=Europe/Berlin"
  # @ignore
  extraVolumes:
    - name: kafka-certs
      projected:
        sources:
          - secret:
              name: bzkf-dizbox-cluster-cluster-ca-cert
              items:
                - key: ca.crt
                  path: ca.crt
                - key: ca.p12
                  path: ca.p12
          - secret:
              name: onco-analytics-on-fhir-akhq
              items:
                - key: user.crt
                  path: user.crt
                - key: user.p12
                  path: user.p12
                - key: user.key
                  path: user.key
  # @ignore
  extraVolumeMounts:
    - name: kafka-certs
      mountPath: "/opt/kafka-certs"
      readOnly: true
  # @ignore
  containerSecurityContext:
    allowPrivilegeEscalation: false
    privileged: false
    capabilities:
      drop:
        - ALL
    runAsNonRoot: true
    runAsUser: 65534
    runAsGroup: 65534
    readOnlyRootFilesystem: true
    seccompProfile:
      type: RuntimeDefault

hapi-fhir-jpaserver:
  # -- whether the included [HAPI FHIR JPA Server](https://github.com/hapifhir/hapi-fhir-jpaserver-starter) should be installed
  enabled: true
  postgresql:
    image:
      tag: 15.1.0-debian-11-r0@sha256:27915588d5203a10a1c23624d9c81644437f33b7c224e25f79bcd9bd09bbb8e2
    nameOverride: hapi-fhir-postgres
    auth:
      # -- the postgres database root (`postgres`) user.
      # this should be changed for improved security.
      # kics-scan ignore-line
      postgresPassword: fhir
    primary:
      persistence:
        # -- size for the HAPI FHIR server's PostgreSQL database
        size: 64Gi
  # @ignore
  extraEnv:
    - name: HAPI_FHIR_ENFORCE_REFERENTIAL_INTEGRITY_ON_DELETE
      value: "false"
    - name: HAPI_FHIR_ENFORCE_REFERENTIAL_INTEGRITY_ON_WRITE
      value: "false"

stream-processors:
  # -- whether the included [stream processors](https://github.com/miracum/charts/tree/master/charts/stream-processors) chart should be installed
  enabled: true
  # -- name of the Kafka cluster deployed by the Strimzi Operator. This should
  # be the same as the name in the [Kafka custom resource](../../k8s/kafka-cluster.yaml).
  strimziClusterName: bzkf-dizbox-cluster
  # @ignore
  processors:
    fhir-to-server:
      replicaCount: 1
      container:
        image:
          registry: ghcr.io
          repository: miracum/kafka-fhir-to-server
          tag: v3.0.3@sha256:77f0a61e91143a13ba02d47add8e73e130b8d0308e55132598f2880e4f221ad9
          pullPolicy: IfNotPresent
        env:
          - name: FHIR_URL
            value: http://onco-analytics-on-fhir-hapi-fhir-jpaserver:8080/fhir
          - name: DISABLE_AUTO_COMMIT
            value: "false"
          - name: TOPIC
            value: >-
              fhir.pseudonymized.obds.MedicationStatement,
              fhir.pseudonymized.obds.Condition,
              fhir.pseudonymized.obds.Observation,
              fhir.pseudonymized.obds.Procedure,
              fhir.pseudonymized.obds.Patient
          - name: JAVA_TOOL_OPTIONS
            value: "-XX:MaxRAMPercentage=70"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
    obds-to-fhir:
      replicaCount: 1
      container:
        image:
          registry: ghcr.io
          repository: miracum/obds-to-fhir
          tag: v2.1.0@sha256:6752d517b423388cce447aaca75a714034bc0a7c0f545c9111d5e45a126fab89
          pullPolicy: IfNotPresent
        env:
          - name: OPENTRACING_JAEGER_ENABLED
            value: "false"
          - name: "FHIR_OUTPUT_TOPIC_PARTITION_COUNT"
            value: "1"
          - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_MINPARTITIONCOUNT
            value: "1"
          - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_AUTOADDPARTITIONS
            value: "true"
          - name: "NUM_STREAM_THREADS"
            value: "1"
          - name: JAVA_TOOL_OPTIONS
            value: "-XX:MaxRAMPercentage=75"
          - name: ACTIVE_PROFILE
            value: "patient"

fhir-gateway:
  enabled: true
  sinks:
    postgres:
      enabled: false
  postgresql:
    enabled: false
  loincConverter:
    enabled: false

  kafka:
    enabled: true
    inputTopics:
      - fhir.obds.MedicationStatement
      - fhir.obds.Condition
      - fhir.obds.Observation
      - fhir.obds.Procedure
      - fhir.obds.Patient
    # name of the topic to write processed resources to.
    # Ignored because we use `SERVICES_KAFKA_GENERATE_OUTPUT_TOPIC_MATCH_EXPRESSION`
    outputTopic: fhir.post-gateway
    # either PLAINTEXT or SSL
    securityProtocol: SSL
    # name of the Strimzi Kafka CRD this gateway should connect to. This is used to resolve the Kafka bootstrap service.
    strimziClusterName: "bzkf-dizbox-cluster"
  extraEnv:
    - name: SERVICES_KAFKA_GENERATE_OUTPUT_TOPIC_MATCH_EXPRESSION
      value: "^fhir\\."
    - name: SERVICES_KAFKA_GENERATE_OUTPUT_TOPIC_REPLACE_WITH
      value: "fhir.pseudonymized."

  fhir-pseudonymizer:
    pseudonymizationService: Vfps
    vfps:
      enabled: true
      postgresql:
        image:
          tag: "15.1.0-debian-11-r0@sha256:27915588d5203a10a1c23624d9c81644437f33b7c224e25f79bcd9bd09bbb8e2"
        auth:
          #checkov:skip=CKV_SECRET_6:Known hard-coded password
          # kics-scan ignore-line
          postgresPassword: "vfps-postgres"
        primary:
          persistence:
            size: 32Gi
      appsettings: |
        {
          "Init": {
            "v1": {
              "Namespaces": [
                {
                  "Name": "patient-identifiers",
                  "Description": "Pseudonyms for patient identifiers",
                  "PseudonymGenerationMethod": "SecureRandomBase64UrlEncoded",
                  "PseudonymLength": 32,
                  "PseudonymPrefix": "pid-"
                },
                {
                  "Name": "visit-identifiers",
                  "Description": "Pseudonyms for visit/encounter identifiers",
                  "PseudonymGenerationMethod": "SecureRandomBase64UrlEncoded",
                  "PseudonymLength": 32,
                  "PseudonymPrefix": "vid-"
                }
              ]
            }
          }
        }
    anonymizationConfig: |
      fhirVersion: R4
      fhirPathRules:
        - path: nodesByType('HumanName')
          method: redact
        - path: nodesByType('Identifier').where(type.coding.system='http://terminology.hl7.org/CodeSystem/v2-0203' and type.coding.code='VN').value
          method: pseudonymize
          domain: visit-identifiers
        - path: nodesByType('Identifier').where(type.coding.system='http://terminology.hl7.org/CodeSystem/v2-0203' and type.coding.code='MR').value
          method: pseudonymize
          domain: patient-identifiers
      parameters:
        dateShiftKey: ""
        dateShiftScope: resource
        cryptoHashKey: "secret"
        encryptKey: ""
        enablePartialAgesForRedact: true
        enablePartialDatesForRedact: true
        enablePartialZipCodesForRedact: true
        restrictedZipCodeTabulationAreas: []
