name: release

on:
  workflow_call: {}

permissions: {}

jobs:
  publish-helm-chart:
    name: publish helm chart
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      # needed for cosign
      id-token: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add helm repos and update deps
        run: |
          helm repo add miracum https://miracum.github.io/charts
          helm repo add akhq https://akhq.io/
          helm repo add hapi-fhir-jpaserver-starter https://hapifhir.github.io/hapi-fhir-jpaserver-starter

          helm dep build charts/onco-analytics-on-fhir
          helm dep build charts/prerequisites

      # TODO: maybe replace image tags in values.yaml with digests before packaging
      - name: Package, upload, and sign Helm charts
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          CHART_VERSION=$(yq .version charts/onco-analytics-on-fhir/Chart.yaml)

          # onco-analytics-on-fhir
          helm package charts/onco-analytics-on-fhir
          helm push "onco-analytics-on-fhir-${CHART_VERSION}.tgz" "oci://ghcr.io/${GITHUB_REPOSITORY}/charts"

          cp "onco-analytics-on-fhir-${CHART_VERSION}.tgz" onco-analytics-on-fhir-chart.tgz

          cosign sign --yes "ghcr.io/${GITHUB_REPOSITORY}/charts/onco-analytics-on-fhir:${CHART_VERSION}"

          # prerequisites
          helm package charts/prerequisites
          helm push "prerequisites-${CHART_VERSION}.tgz" "oci://ghcr.io/${GITHUB_REPOSITORY}/charts"

          cp "prerequisites-${CHART_VERSION}.tgz" prerequisites-chart.tgz

          cosign sign --yes "ghcr.io/${GITHUB_REPOSITORY}/charts/prerequisites:${CHART_VERSION}"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: helm-charts
          path: |
            onco-analytics-on-fhir-chart.tgz
            prerequisites-chart.tgz

  build-air-gapped-installer:
    name: build air-gapped installer package
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - run: |
          ./build-air-gapped-installer.sh

      - name: Upload air-gapped installer artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: air-gapped-installers
          path: |
            air-gapped-installer.tgz
            air-gapped-prerequisites-installer.tgz
            compose-air-gapped-installer.tar.gz.*

  prepare-artifacts:
    name: prepare artifacts
    runs-on: ubuntu-24.04
    needs:
      - publish-helm-chart
      - build-air-gapped-installer
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: write # to upload artifacts to the release
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Download Helm chart
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: helm-charts
          path: /tmp

      - name: Download air-gapped installers
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: air-gapped-installers
          path: /tmp

      - name: Create dist dir
        run: |
          mkdir -p dist/

      - name: Add Helm chart to dist
        run: |
          ls -lsa /tmp
          cp /tmp/onco-analytics-on-fhir-chart.tgz dist/
          cp /tmp/prerequisites-chart.tgz dist/
          # cp /tmp/air-gapped-installer.tgz dist/
          # cp /tmp/air-gapped-prerequisites-installer.tgz dist/
          cp /tmp/compose-air-gapped-installer.tar.gz.* dist/

      - name: Generate SLSA subject for release assets
        id: hash
        working-directory: dist
        run: |
          # air-gapped-installer.tgz air-gapped-prerequisites-installer.tgz
          sha256sum onco-analytics-on-fhir-chart.tgz prerequisites-chart.tgz compose-air-gapped-installer.tar.gz.* > checksums.sha256
          echo "hashes=$(base64 -w0 < checksums.sha256)" >> "$GITHUB_OUTPUT"

      - name: upload assets to release
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v2
        with:
          files: |
            dist/*.tgz
            dist/*.tar.gz.*
            dist/*.sha256

  provenance:
    needs:
      - prepare-artifacts
    permissions:
      actions: read
      id-token: write
      contents: write
    # can't be referenced by digest. See <https://github.com/slsa-framework/slsa-github-generator#verification-of-provenance>
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.prepare-artifacts.outputs.hashes }}"
      compile-generator: true # Workaround for https://github.com/slsa-framework/slsa-github-generator/issues/1163
      upload-assets: true
